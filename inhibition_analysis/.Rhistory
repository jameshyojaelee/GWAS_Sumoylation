t[[1]] <- t.test(AUC ~ Hugo_Symbol, data = ttest_df)
tsum <- sapply(t, function(x) {
c(x$estimate[1],
x$estimate[2],
p.value = x$p.value)
})
return(tsum)
}
ttest("KRAS", panc_in)
#create dataframe with top 10 mutations (with below 400 AUC)
panc_below_avg_df <- as.data.frame(panc_below_avg, stringsAsFactors=FALSE)
colnames(panc_below_avg_df) <- c('mutation', 'freq')
panc_below_avg_df$Mut_AUC_mean <- NA
panc_below_avg_df$others_AUC_mean <- NA
panc_below_avg_df$p.value <- NA
#for loop to fill in the dataframe
for (i in 1:nrow(panc_below_avg_df)) {
print(panc_below_avg_df$mutation[i])
t <- ttest(panc_below_avg_df$mutation[i], panc_in)
panc_below_avg_df$Mut_AUC_mean[i] <- t[1]
panc_below_avg_df$others_AUC_mean[i] <- t[2]
panc_below_avg_df$p.value[i] <- round(t[3], digits=3)
}
write.csv(panc_below_avg_df, "PANC_mutation.csv", row.names=FALSE)
#common mutation with below average AUC value
below_avg_colo_AUC <- colo_in[colo_in$AUC < 400, ]
nrow(distinct(below_avg_colo_AUC, ccl))
#list the 10 most common mutations
colo_below_avg <- sort(table(below_avg_colo_AUC$Hugo_Symbol),decreasing=TRUE)[1:10]
colo_below_avg
#common mutation with above average AUC value
above_avg_colo_AUC <- colo_in[colo_in$AUC >= 400, ]
nrow(distinct(above_avg_colo_AUC, ccl))
#list the 10 most common mutations
colo_above_avg <- sort(table(above_avg_colo_AUC$Hugo_Symbol),decreasing=TRUE)[1:10]
colo_above_avg
#use ttest function that we created during pancreas analysis
ttest("TTN", colo_in)
#create dataframe with top 10 mutations (with below 400 AUC)
colo_below_avg_df <- as.data.frame(colo_below_avg, stringsAsFactors=FALSE)
colnames(colo_below_avg_df) <- c('mutation', 'freq')
colo_below_avg_df$Mut_AUC_mean <- NA
colo_below_avg_df$others_AUC_mean <- NA
colo_below_avg_df$p.value <- NA
#for loop to fill in the dataframe
for (i in 1:nrow(colo_below_avg_df)) {
print(colo_below_avg_df$mutation[i])
tsum <- ttest(colo_below_avg_df$mutation[i], colo_in)
colo_below_avg_df$Mut_AUC_mean[i] <- tsum[1]
colo_below_avg_df$others_AUC_mean[i] <- tsum[2]
colo_below_avg_df$p.value[i] <- round(tsum[3], digits=3)
}
write.csv(colo_below_avg_df, "COLO_mutation.csv", row.names=FALSE)
panc_below_avg_df
colo_below_avg_df
View(cclID)
View(ccl_mut)
panc_below_avg_df
colo_below_avg_df
#common mutation with below average AUC value
below_avg_colo_AUC <- colo_in[colo_in$AUC < 400, ]
nrow(distinct(below_avg_colo_AUC, ccl))
#list the 10 most common mutations
colo_below_avg <- sort(table(below_avg_colo_AUC$Hugo_Symbol),decreasing=TRUE)[1:10]
colo_below_avg
ve average AUC value
above_avg_colo_AUC <- colo_in[colo_in$AUC >= 400, ]
nrow(distinct(above_avg_colo_AUC, ccl))
#list the 10 most common mutations
colo_above_avg <- sort(table(above_avg_colo_AUC$Hugo_Symbol),decreasing=TRUE)[1:10]
colo_above_avg
#use ttest function that we created during pancreas analysis
ttest("TTN", colo_in)
#create dataframe with top 10 mutations (with below 400 AUC)
colo_below_avg_df <- as.data.frame(colo_below_avg, stringsAsFactors=FALSE)
colnames(colo_below_avg_df) <- c('mutation', 'freq')
colo_below_avg_df$Mut_AUC_mean <- NA
colo_below_avg_df$others_AUC_mean <- NA
colo_below_avg_df$p.value <- NA
#for loop to fill in the dataframe
for (i in 1:nrow(colo_below_avg_df)) {
print(colo_below_avg_df$mutation[i])
tsum <- ttest(colo_below_avg_df$mutation[i], colo_in)
colo_below_avg_df$Mut_AUC_mean[i] <- tsum[1]
colo_below_avg_df$others_AUC_mean[i] <- tsum[2]
colo_below_avg_df$p.value[i] <- round(tsum[3], digits=3)
}
colo_below_avg_df
mean(colo_in$AUC)
mean(panc_in$AUC)
View(panc_in)
below_avg_colo_AUC <- colo_in[colo_in$AUC < 500, ]
nrow(distinct(below_avg_colo_AUC, ccl))
#list the 10 most common mutations
colo_below_avg <- sort(table(below_avg_colo_AUC$Hugo_Symbol),decreasing=TRUE)[1:10]
colo_below_avg
#common mutation with above average AUC value
above_avg_colo_AUC <- colo_in[colo_in$AUC >= 500, ]
nrow(distinct(above_avg_colo_AUC, ccl))
#list the 10 most common mutations
colo_above_avg <- sort(table(above_avg_colo_AUC$Hugo_Symbol),decreasing=TRUE)[1:10]
colo_above_avg
#use ttest function that we created during pancreas analysis
ttest("TTN", colo_in)
#create dataframe with top 10 mutations (with below 400 AUC)
colo_below_avg_df <- as.data.frame(colo_below_avg, stringsAsFactors=FALSE)
colnames(colo_below_avg_df) <- c('mutation', 'freq')
colo_below_avg_df$Mut_AUC_mean <- NA
colo_below_avg_df$others_AUC_mean <- NA
colo_below_avg_df$p.value <- NA
#for loop to fill in the dataframe
for (i in 1:nrow(colo_below_avg_df)) {
print(colo_below_avg_df$mutation[i])
tsum <- ttest(colo_below_avg_df$mutation[i], colo_in)
colo_below_avg_df$Mut_AUC_mean[i] <- tsum[1]
colo_below_avg_df$others_AUC_mean[i] <- tsum[2]
colo_below_avg_df$p.value[i] <- round(tsum[3], digits=3)
}
colo_below_avg_df
#common mutation with below average AUC value
below_avg_colo_AUC <- colo_in[colo_in$AUC < 450, ]
nrow(distinct(below_avg_colo_AUC, ccl))
#list the 10 most common mutations
colo_below_avg <- sort(table(below_avg_colo_AUC$Hugo_Symbol),decreasing=TRUE)[1:10]
colo_below_avg
#common mutation with above average AUC value
above_avg_colo_AUC <- colo_in[colo_in$AUC >= 450, ]
nrow(distinct(above_avg_colo_AUC, ccl))
#list the 10 most common mutations
colo_above_avg <- sort(table(above_avg_colo_AUC$Hugo_Symbol),decreasing=TRUE)[1:10]
colo_above_avg
#use ttest function that we created during pancreas analysis
ttest("TTN", colo_in)
#create dataframe with top 10 mutations (with below 400 AUC)
colo_below_avg_df <- as.data.frame(colo_below_avg, stringsAsFactors=FALSE)
colnames(colo_below_avg_df) <- c('mutation', 'freq')
colo_below_avg_df$Mut_AUC_mean <- NA
colo_below_avg_df$others_AUC_mean <- NA
colo_below_avg_df$p.value <- NA
#for loop to fill in the dataframe
for (i in 1:nrow(colo_below_avg_df)) {
print(colo_below_avg_df$mutation[i])
tsum <- ttest(colo_below_avg_df$mutation[i], colo_in)
colo_below_avg_df$Mut_AUC_mean[i] <- tsum[1]
colo_below_avg_df$others_AUC_mean[i] <- tsum[2]
colo_below_avg_df$p.value[i] <- round(tsum[3], digits=3)
}
colo_below_avg_df
#common mutation with below average AUC value
below_avg_colo_AUC <- colo_in[colo_in$AUC < 350, ]
nrow(distinct(below_avg_colo_AUC, ccl))
#list the 10 most common mutations
colo_below_avg <- sort(table(below_avg_colo_AUC$Hugo_Symbol),decreasing=TRUE)[1:10]
colo_below_avg
#common mutation with above average AUC value
above_avg_colo_AUC <- colo_in[colo_in$AUC >= 350, ]
nrow(distinct(above_avg_colo_AUC, ccl))
#list the 10 most common mutations
colo_above_avg <- sort(table(above_avg_colo_AUC$Hugo_Symbol),decreasing=TRUE)[1:10]
colo_above_avg
#use ttest function that we created during pancreas analysis
ttest("TTN", colo_in)
#create dataframe with top 10 mutations (with below 400 AUC)
colo_below_avg_df <- as.data.frame(colo_below_avg, stringsAsFactors=FALSE)
colnames(colo_below_avg_df) <- c('mutation', 'freq')
colo_below_avg_df$Mut_AUC_mean <- NA
colo_below_avg_df$others_AUC_mean <- NA
colo_below_avg_df$p.value <- NA
#for loop to fill in the dataframe
for (i in 1:nrow(colo_below_avg_df)) {
print(colo_below_avg_df$mutation[i])
tsum <- ttest(colo_below_avg_df$mutation[i], colo_in)
colo_below_avg_df$Mut_AUC_mean[i] <- tsum[1]
colo_below_avg_df$others_AUC_mean[i] <- tsum[2]
colo_below_avg_df$p.value[i] <- round(tsum[3], digits=3)
}
colo_below_avg_df
View(panc_in)
View(colo_in)
panc_RAD <- colnames(panc_in)
panc_RAD <- panc_in
panc_RAD[grepl("RAD", panc_RAD$Hugo_Symbol)]
panc_RAD <- panc_in
panc_RAD[grepl("RAD", panc_RAD$Hugo_Symbol)]
panc_RAD$Hugo_Symbol[grepl("RAD", panc_RAD$Hugo_Symbol)]
panc_RAD$Hugo_Symbol[grepl("^RAD", panc_RAD$Hugo_Symbol)]
#subset of any gene that starts with RAD
panc_RAD$Hugo_Symbol[grepl("^RAD", panc_RAD)]
#subset of any gene that starts with RAD
panc_RAD[grepl("^RAD", panc_RAD$Hugo_Symbol)]
#subset of any gene that starts with RAD
x <- panc_RAD$Hugo_Symbol[grepl("^RAD", panc_RAD$Hugo_Symbol)]
panc_RAD <- subset(panc_in, Hugo_Symbol == x)
View(panc_RAD)
x
#create subset for RAD genes within pancreatic cells.
panc_RAD <- panc_in
#subset of any gene that starts with RAD
x <- panc_RAD$Hugo_Symbol[grepl("^RAD", panc_RAD$Hugo_Symbol)]
x
x[1]
x[,1]
#subset of any gene that starts with RAD
x <- panc_RAD[grepl("^RAD", panc_RAD$Hugo_Symbol), ]
View(x)
#create subset for RAD genes within pancreatic cells.
panc_RAD <- panc_in
#create subset for RAD genes within pancreatic cells.
#subset of any gene that starts with RAD
panc_RAD <- panc_in[grepl("^RAD", panc_in$Hugo_Symbol), ]
colo_RAD <- colo_in[grepl("^RAD", colo_in$Hugo_Symbol), ]
View(colo_RAD)
View(panc_below_avg_df)
View(panc_below_avg_df)
colo_above_avg
panc_RAD_ttest <- as.data.frame(panc_RAD$Hugo_Symbol, stringsAsFactors=FALSE)
View(panc_RAD_ttest)
colnames(panc_RAD_ttest) <- c('mutation')
panc_RAD_ttest$Mut_AUC_mean <- NA
panc_RAD_ttest$others_AUC_mean <- NA
panc_RAD_ttest$p.value <- NA
#for loop to fill in the dataframe
for (i in 1:nrow(panc_RAD_ttest)) {
print(panc_RAD_ttest$mutation[i])
tsum <- ttest(panc_RAD_ttest$mutation[i], panc_in)
panc_RAD_ttest$Mut_AUC_mean[i] <- tsum[1]
panc_RAD_ttest$others_AUC_mean[i] <- tsum[2]
panc_RAD_ttest$p.value[i] <- round(tsum[3], digits=3)
}
#create a function to repeat t-test for other genes
ttest <- function(M, df){
ttest_df <- df
ttest_df$Hugo_Symbol <- as.character(ttest_df$Hugo_Symbol)
ttest_df$Hugo_Symbol[ttest_df$Hugo_Symbol != M] <- "Lacks Mut"
ttest_df$Hugo_Symbol[ttest_df$Hugo_Symbol == M] <- "Has Mut"
t <- list()
t[[1]] <- t.test(AUC ~ Hugo_Symbol, data = ttest_df)
tsum <- sapply(t, function(x) {
c(x$estimate[1],
x$estimate[2],
p.value = x$p.value)
})
return(tsum)
}
ttest("KRAS", panc_in)
ttest("RAD1", panc_in)
panc_RAD_ttest
#create subset for RAD genes within pancreatic cells.
#subset of any gene that starts with RAD
panc_RAD <- panc_in[grepl("^RAD", panc_in$Hugo_Symbol), ]
View(panc_RAD)
?ttest
?t.test
panc_RAD
#create subset for RAD genes within pancreatic cells.
#subset of any gene that starts with RAD
panc_RAD <- unique(panc_in$Hugo_Symbol[grepl("^RAD", panc_in$Hugo_Symbol), ])
#create subset for RAD genes within pancreatic cells.
#subset of any gene that starts with RAD
panc_RAD <- panc_in$Hugo_Symbol[grepl("^RAD", panc_in$Hugo_Symbol), ]
#create subset for RAD genes within pancreatic cells.
#subset of any gene that starts with RAD
panc_RAD <- panc_in$Hugo_Symbol[grepl("^RAD", panc_in$Hugo_Symbol)]
#create subset for RAD genes within pancreatic cells.
#subset of any gene that starts with RAD
panc_RAD <- unique(panc_in$Hugo_Symbol[grepl("^RAD", panc_in$Hugo_Symbol)])
panc_RAD
#create subset for RAD genes within pancreatic cells.
#subset of any gene that starts with RAD
panc_RAD <- distinct(panc_in$Hugo_Symbol[grepl("^RAD", panc_in$Hugo_Symbol)])
library(dplyr)
#create subset for RAD genes within pancreatic cells.
#subset of any gene that starts with RAD
panc_RAD <- distinct(panc_in$Hugo_Symbol[grepl("^RAD", panc_in$Hugo_Symbol)])
panc_RAD
#create subset for RAD genes within pancreatic cells.
#subset of any gene that starts with RAD
panc_RAD <- panc_in[grepl("^RAD", panc_in$Hugo_Symbol), ]
panc_RAD
droplevels(panc_RAD)
#create subset for RAD genes within pancreatic cells.
#subset of any gene that starts with RAD
panc_RAD <- droplevels(panc_in[grepl("^RAD", panc_in$Hugo_Symbol), ])
panc_RAD
panc_RAD$Hugo_Symbol
panc_RAD_ttest$Hugo_Symbol[ttest_df$Hugo_Symbol != panc_RAD$Hugo_Symbol] <- "Lacks Mut"
panc_RAD_ttest <- panc_in
panc_RAD_ttest$Hugo_Symbol <- as.character(ttest_df$Hugo_Symbol)
panc_RAD_ttest$Hugo_Symbol[ttest_df$Hugo_Symbol != panc_RAD$Hugo_Symbol] <- "Lacks Mut"
View(panc_RAD_ttest)
mut_list <- panc_RAD$Hugo_Symbol
panc_RAD_ttest[grep(paste0("^", mut_list, collapse="|"), panc_RAD_ttest$Hugo_Symbol), ]
panc_RAD_ttest
panc_RAD_ttest <- panc_in
panc_RAD_ttest$Hugo_Symbol <- as.character(ttest_df$Hugo_Symbol)
panc_RAD_ttest[grep(paste0("^", mut_list, collapse="|"), panc_RAD_ttest$Hugo_Symbol), ]
panc_RAD_ttest[grep(paste0("^", mut_list, collapse="|"), panc_RAD_ttest$Hugo_Symbol), ]
panc_RAD_ttest <- panc_in
panc_RAD_ttest$Hugo_Symbol <- as.character(ttest_df$Hugo_Symbol)
panc_RAD_ttest <- panc_in
panc_RAD_ttest$Hugo_Symbol <- as.character(panc_RAD_ttest$Hugo_Symbol)
panc_RAD_ttest[grep(paste0("^", mut_list, collapse="|"), panc_RAD_ttest$Hugo_Symbol), ]
#create subset for RAD genes within pancreatic cells.
#subset of any gene that starts with RAD
panc_RAD <- panc_in
#create subset for RAD genes within pancreatic cells.
#subset of any gene that starts with RAD
panc_RAD <- droplevels(panc_in[grepl("^RAD", panc_in$Hugo_Symbol), ])
mut_list <- panc_RAD$Hugo_Symbol
panc_RAD_ttest
panc_RAD_ttest <- panc_in
panc_RAD_ttest$Hugo_Symbol <- as.character(panc_RAD_ttest$Hugo_Symbol)
panc_RAD_ttest[grep(paste0("^", mut_list, collapse="|"), panc_RAD_ttest$Hugo_Symbol), ]
panc_RAD_ttest$Hugo_Symbol[ttest_df$Hugo_Symbol != mut_list] <- "Lacks Mut"
!panc_RAD_ttest[grep(paste0("^", mut_list, collapse="|"), panc_RAD_ttest$Hugo_Symbol), ]
panc_RAD_ttest[grep(paste0("^", mut_list, collapse="|"), panc_RAD_ttest$Hugo_Symbol), ]
panc_RAD_ttest <- panc_in
panc_RAD_ttest$Hugo_Symbol <- as.character(panc_RAD_ttest$Hugo_Symbol)
panc_RAD_ttest[grep(paste0("^", mut_list, collapse="|"), panc_RAD_ttest$Hugo_Symbol), ]
!panc_RAD_ttest[grep(paste0("^", mut_list, collapse="|"), panc_RAD_ttest$Hugo_Symbol), ]
panc_RAD_ttest[grep(paste0("^", mut_list, collapse="|"), panc_RAD_ttest$Hugo_Symbol), ]
panc_RAD_ttest$Hugo_Symbol[grep(paste0("^", mut_list, collapse="|"), panc_RAD_ttest$Hugo_Symbol), ]
panc_RAD_ttest$Hugo_Symbol[grep(paste0("^", mut_list, collapse="|"), panc_RAD_ttest$Hugo_Symbol)]
panc_RAD_ttest$Hugo_Symbol[grep(paste0("^", mut_list, collapse="|"), panc_RAD_ttest$Hugo_Symbol)] <- "Has Mut"
panc_RAD_ttest$Hugo_Symbol[grep(paste0("^", mut_list, collapse="|"), panc_RAD_ttest$Hugo_Symbol)] <- "RAD"
panc_RAD_ttest$Hugo_Symbol[ttest_df$Hugo_Symbol != "RAD"] <- "Lacks Mut"
panc_RAD_ttest$Hugo_Symbol[ttest_df$Hugo_Symbol == "RAD"] <- "Has Mut"
View(panc_RAD_ttest)
class(panc_RAD_ttest$Hugo_Symbol)
panc_RAD_ttest <- panc_in
class(panc_RAD_ttest$Hugo_Symbol)
panc_RAD_ttest$Hugo_Symbol[grep(paste0("^", mut_list, collapse="|"), panc_RAD_ttest$Hugo_Symbol)] <- "RAD"
panc_RAD_ttest$Hugo_Symbol <- as.character(panc_RAD_ttest$Hugo_Symbol)
panc_RAD_ttest$Hugo_Symbol[grep(paste0("^", mut_list, collapse="|"), panc_RAD_ttest$Hugo_Symbol)] <- "RAD"
panc_RAD_ttest$Hugo_Symbol[ttest_df$Hugo_Symbol == "RAD"] <- "Has Mut"
panc_RAD_ttest <- panc_in
panc_RAD_ttest$Hugo_Symbol[grep(paste0("^", mut_list, collapse="|"), panc_RAD_ttest$Hugo_Symbol)]
panc_RAD_ttest$Hugo_Symbol[ttest_df$Hugo_Symbol != "RAD"] <- "Lacks Mut"
panc_RAD_ttest <- panc_in
panc_RAD_ttest$Hugo_Symbol <- as.character(panc_RAD_ttest$Hugo_Symbol)
panc_RAD_ttest$Hugo_Symbol[grep(paste0("^", mut_list, collapse="|"), panc_RAD_ttest$Hugo_Symbol)] <- "RAD"
panc_RAD_ttest$Hugo_Symbol[ttest_df$Hugo_Symbol != "RAD"] <- "Lacks Mut"
panc_RAD_ttest <- panc_in
panc_RAD_ttest$Hugo_Symbol <- as.character(panc_RAD_ttest$Hugo_Symbol)
panc_RAD_ttest$Hugo_Symbol[grep(paste0("^", mut_list, collapse="|"), panc_RAD_ttest$Hugo_Symbol)] <- "RAD"
panc_RAD_ttest$Hugo_Symbol[grep(paste0("^", mut_list, collapse="|"), panc_RAD_ttest$Hugo_Symbol)] <- "RAD"
panc_RAD_ttest$Hugo_Symbol[panc_RAD_ttest$Hugo_Symbol != "RAD"] <- "Lacks Mut"
distinct(panc_RAD_ttest, Hugo_Symbol)
t.test(AUC ~ Hugo_Symbol, data=panc_RAD_ttest)
mut_list
colo_RAD_ttest <- colo_in
#RAD in colorectal
colo_RAD <- colo_in[grepl("^RAD", colo_in$Hugo_Symbol), ]
mut_list <- colo_RAD$Hugo_Symbol
colo_RAD_ttest <- colo_in
colo_RAD_ttest <- colo_in
colo_RAD_ttest$Hugo_Symbol <- as.character(colo_RAD_ttest$Hugo_Symbol)
View(colo_RAD_ttest)
#change all RAD family genes to RAD
colo_RAD_ttest$Hugo_Symbol[grep(paste0("^", mut_list, collapse="|"), colo_RAD_ttest$Hugo_Symbol)] <- "RAD"
colo_RAD_ttest$Hugo_Symbol[colo_RAD_ttest$Hugo_Symbol != "RAD"] <- "Lacks Mut"
distinct(colo_RAD_ttest, Hugo_Symbol)
t.test(AUC ~ Hugo_Symbol, data=colo_RAD_ttest)
mut_list
mut_list
class(mut_list)
mut_list <- as.data.frame(colo_RAD$Hugo_Symbol)
View(mut_list)
mut_list <- as.vector(colo_RAD$Hugo_Symbol)
mut_list
mut_list <- mut_list[!mut_list %>% "RADIL"]
mut_list <- mut_list[! mut_list %>% "RADIL"]
mut_list <- mut_list[mut_list != "RADIL"]
source('C:/Users/james/Desktop/Sumoylation_Analysis/project/inhibition_analysis/inhibition_analysis.R', echo=TRUE)
source('C:/Users/james/Desktop/Sumoylation_Analysis/project/inhibition_analysis/inhibition_analysis.R', echo=TRUE)
mut_list <- mut_list[mut_list != "RADIL"]
mut_list
#RAD in colorectal
colo_RAD <- colo_in[grepl("^RAD", colo_in$Hugo_Symbol), ]
mut_list <- as.vector(colo_RAD$Hugo_Symbol)
mut_list
#remove RADIL since it's not a RAD gene
mut_list <- mut_list[mut_list != "RADIL"]
colo_RAD_ttest <- colo_in
colo_RAD_ttest$Hugo_Symbol <- as.character(colo_RAD_ttest$Hugo_Symbol)
#change all RAD family genes to RAD
colo_RAD_ttest$Hugo_Symbol[grep(paste0("^", mut_list, collapse="|"), colo_RAD_ttest$Hugo_Symbol)] <- "RAD"
colo_RAD_ttest$Hugo_Symbol[colo_RAD_ttest$Hugo_Symbol != "RAD"] <- "Lacks Mut"
distinct(colo_RAD_ttest, Hugo_Symbol)
t.test(AUC ~ Hugo_Symbol, data=colo_RAD_ttest)
mut_list
#XRCC in colorectal
colo_XRCC <- colo_in[grepl("^XRCC", colo_in$Hugo_Symbol), ]
#XRCC in colorectal
colo_XRCC <- colo_in[grepl("^XRCC", colo_in$Hugo_Symbol), ]
mut_list <- as.vector(colo_XRCC$Hugo_Symbol)
mut_list
colo_XRCC_ttest <- colo_in
colo_XRCC_ttest <- colo_in
colo_XRCC_ttest$Hugo_Symbol <- as.character(colo_XRCC_ttest$Hugo_Symbol)
colo_XRCC_ttest$Hugo_Symbol <- as.character(colo_XRCC_ttest$Hugo_Symbol)
#change all RAD family genes to RAD
colo_XRCC_ttest$Hugo_Symbol[grep(paste0("^", mut_list, collapse="|"), colo_XRCC_ttest$Hugo_Symbol)] <- "XRCC"
colo_XRCC_ttest$Hugo_Symbol[colo_XRCC_ttest$Hugo_Symbol != "XRCC"] <- "Lacks Mut"
distinct(colo_XRCC_ttest, Hugo_Symbol)
View(colo_XRCC_ttest)
t.test(AUC ~ Hugo_Symbol, data=colo_XRCC_ttest)
mut_list
colo_RAD <- colo_in[grepl("^RAD", colo_in$Hugo_Symbol), ]
mut_list <- as.vector(colo_RAD$Hugo_Symbol)
#remove RADIL since it's not a RAD gene
mut_list <- mut_list[mut_list != "RADIL"]
colo_RAD_ttest <- colo_in
colo_RAD_ttest$Hugo_Symbol <- as.character(colo_RAD_ttest$Hugo_Symbol)
#change all RAD family genes to RAD
colo_RAD_ttest$Hugo_Symbol[grep(paste0("^", mut_list, collapse="|"), colo_RAD_ttest$Hugo_Symbol)] <- "RAD"
colo_RAD_ttest$Hugo_Symbol[colo_RAD_ttest$Hugo_Symbol != "RAD"] <- "Lacks Mut"
distinct(colo_RAD_ttest, Hugo_Symbol)
t.test(AUC ~ Hugo_Symbol, data=colo_RAD_ttest)
#ATR in colorectal
colo_ATR <- colo_in[grepl("^ATR", colo_in$Hugo_Symbol), ]
mut_list <- as.vector(colo_ATR$Hugo_Symbol)
mut_list
#
mut_list <- mut_list[mut_list != "ATRn"]
#
mut_list <- mut_list[mut_list != "ATRN"]
mut_list
#ATR in colorectal
colo_ATR <- colo_in[grepl("^ATR", colo_in$Hugo_Symbol), ]
mut_list <- as.vector(colo_ATR$Hugo_Symbol)
#delete ATRNL1 since its not a ATR gene
mut_list <- mut_list[mut_list != "ATRNL1"]
mut_list
#
mut_list <- mut_list[mut_list != "ATRN"]
mut_list
#
mut_list <- mut_list[mut_list != "ATRX"]
mut_list
colo_ATR_ttest <- colo_in
colo_ATR_ttest$Hugo_Symbol <- as.character(colo_ATR_ttest$Hugo_Symbol)
#change all RAD family genes to RAD
colo_ATR_ttest$Hugo_Symbol[grep(paste0("^", mut_list, collapse="|"), colo_ATR_ttest$Hugo_Symbol)] <- "ATR"
colo_ATR_ttest$Hugo_Symbol[colo_ATR_ttest$Hugo_Symbol != "ATR"] <- "Lacks Mut"
distinct(colo_ATR_ttest, Hugo_Symbol)
t.test(AUC ~ Hugo_Symbol, data=colo_ATR_ttest)
#BRCA in pancreatic
panc_BRCA <- droplevels(panc_in[grepl("^BRCA", panc_in$Hugo_Symbol), ])
#BRCA in pancreatic
panc_BRCA <- droplevels(panc_in[grepl("^BRCA", panc_in$Hugo_Symbol), ])
mut_list <- panc_BRCA$Hugo_Symbol
panc_BRCA_ttest <- panc_in
panc_BRCA_ttest$Hugo_Symbol <- as.character(panc_BRCA_ttest$Hugo_Symbol)
mut_list
#change all RAD family genes to RAD
panc_BRCA_ttest$Hugo_Symbol[grep(paste0("^", mut_list, collapse="|"), panc_BRCA_ttest$Hugo_Symbol)] <- "BRCA"
panc_BRCA_ttest$Hugo_Symbol[panc_BRCA_ttest$Hugo_Symbol != "BRCA"] <- "Lacks Mut"
distinct(panc_BRCA_ttest, Hugo_Symbol)
t.test(AUC ~ Hugo_Symbol, data=panc_BRCA_ttest)
#RAD in colorectal
colo_RAD <- colo_in[grepl("^RAD", colo_in$Hugo_Symbol), ]
t.test(AUC ~ Hugo_Symbol, data=panc_BRCA_ttest)
#BRCA in colorectal
colo_BRCA <- colo_in[grepl("^BRCA", colo_in$Hugo_Symbol), ]
mut_list <- as.vector(colo_BRCA$Hugo_Symbol)
mut_list
colo_BRCA_ttest <- colo_in
colo_BRCA_ttest$Hugo_Symbol <- as.character(colo_BRCA_ttest$Hugo_Symbol)
#change all RAD family genes to RAD
colo_BRCA_ttest$Hugo_Symbol[grep(paste0("^", mut_list, collapse="|"), colo_BRCA_ttest$Hugo_Symbol)] <- "BRCA"
colo_BRCA_ttest$Hugo_Symbol[colo_BRCA_ttest$Hugo_Symbol != "BRCA"] <- "Lacks Mut"
distinct(colo_BRCA_ttest, Hugo_Symbol)
t.test(AUC ~ Hugo_Symbol, data=colo_BRCA_ttest)
#MUC in pancreatic
panc_MUC <- droplevels(panc_in[grepl("^MUC", panc_in$Hugo_Symbol), ])
mut_list <- panc_MUC$Hugo_Symbol
mut_list
panc_MUC_ttest <- panc_in
panc_MUC_ttest$Hugo_Symbol <- as.character(panc_MUC_ttest$Hugo_Symbol)
#change all RAD family genes to RAD
panc_MUC_ttest$Hugo_Symbol[grep(paste0("^", mut_list, collapse="|"), panc_MUC_ttest$Hugo_Symbol)] <- "MUC"
panc_MUC_ttest$Hugo_Symbol[panc_MUC_ttest$Hugo_Symbol != "MUC"] <- "Lacks Mut"
distinct(panc_MUC_ttest, Hugo_Symbol)
t.test(AUC ~ Hugo_Symbol, data=panc_MUC_ttest)
distinct(mut_list)
distinct(mut_list)
mut_list
mut_list <- as.vector(panc_MUC$Hugo_Symbol)
distinct(mut_list)
mut_list <- as.character(panc_MUC$Hugo_Symbol)
distinct(mut_list)
mut_list <- as.vector(panc_MUC$Hugo_Symbol)
mut_list
panc_MUC_ttest <- panc_in
panc_MUC_ttest$Hugo_Symbol <- as.character(panc_MUC_ttest$Hugo_Symbol)
#change all RAD family genes to RAD
panc_MUC_ttest$Hugo_Symbol[grep(paste0("^", mut_list, collapse="|"), panc_MUC_ttest$Hugo_Symbol)] <- "MUC"
panc_MUC_ttest$Hugo_Symbol[panc_MUC_ttest$Hugo_Symbol != "MUC"] <- "Lacks Mut"
distinct(panc_MUC_ttest, Hugo_Symbol)
t.test(AUC ~ Hugo_Symbol, data=panc_MUC_ttest)
#MUC in colorectal
colo_MUC <- colo_in[grepl("^MUC", colo_in$Hugo_Symbol), ]
mut_list <- as.vector(colo_MUC$Hugo_Symbol)
mut_list
colo_MUC_ttest <- colo_in
colo_MUC_ttest$Hugo_Symbol <- as.character(colo_MUC_ttest$Hugo_Symbol)
#change all RAD family genes to RAD
colo_MUC_ttest$Hugo_Symbol[grep(paste0("^", mut_list, collapse="|"), colo_MUC_ttest$Hugo_Symbol)] <- "MUC"
colo_MUC_ttest$Hugo_Symbol[colo_MUC_ttest$Hugo_Symbol != "MUC"] <- "Lacks Mut"
distinct(colo_MUC_ttest, Hugo_Symbol)
t.test(AUC ~ Hugo_Symbol, data=colo_MUC_ttest)
