#import mutation info
ccl_mut <- read.csv("C:/Users/james/Desktop/Gene_knockout/data/CCLE_mutations.csv")
cclID <- read.csv("C:/Users/james/Desktop/Gene_knockout/data/sample_info.csv") #list of all cell lines, ID and lineage
inhibition <- read.csv("inhibition/inhibition_data.csv", fileEncoding="UTF-8-BOM") #inhibition data
#dataframe with the cancer cell line names
getwd()
#import mutation info
ccl_mut <- read.csv("C:/Users/james/Desktop/Sumoylation_Analysis/data/CCLE_mutations.csv")
cclID <- read.csv("C:/Users/james/Desktop/Sumoylation_Analysis/data/sample_info.csv") #list of all cell lines, ID and lineage
inhibition <- read.csv("inhibition/inhibition_data.csv", fileEncoding="UTF-8-BOM") #inhibition data
#dataframe with the cancer cell line names
ccl_df <- data.frame(ID = cclID$DepMap_ID, ccl = cclID$stripped_cell_line_name, lineage = cclID$lineage)
#change the column name of DepMap_ID to ID
colnames(ccl_mut)[which(names(ccl_mut) == "DepMap_ID")] <- "ID"
colnames(ccl_df)[which(names(ccl_df) == "DepMap_ID")] <- "ID"
#subset 3 columns only
mut <- subset(ccl_mut, select = c("ID", "Hugo_Symbol", "Variant_Classification"))
#import the auc data to manipulate
mut_df <- merge(x = ccl_df,
y = mut,
by = "ID")
#eliminate silent mutation
mut_df <- mut_df[mut_df$Variant_Classification != "Silent", ]
#extract colorectal and pancreatic cancer only
mut_df <- mut_df[which(mut_df$lineage == "colorectal" | mut_df$lineage == "pancreas"), ]
#now process inhibition data by eliminating all spaces and special characters
inhibition$cell <- gsub(" ", "", inhibition$cell)
inhibition$cell <- gsub("-", "", inhibition$cell)
inhibition$cell <- gsub("\\.", "", inhibition$cell) #to remove dot, add 2 backslashes
colnames(inhibition)[which(names(inhibition) == "cell")] <- "ccl"
final_df <- merge(x = mut_df,
y = inhibition,
by = "ccl")
colo_in <- final_df[final_df$lineage == "colorectal", ]
panc_in <- final_df[final_df$lineage == "pancreas", ]
below_avg_panc_in
#list top 5 common mutations
sort(table(final_df$Hugo_Symbol),decreasing=TRUE)[1:5]
sort(table(colo_in$Hugo_Symbol),decreasing=TRUE)[1:5]
sort(table(panc_in$Hugo_Symbol),decreasing=TRUE)[1:5]
#
below_avg_panc_in <- panc_in[panc_in$Abs.IC50 < mean(panc_in$Abs.IC50), ]
below_avg_panc_in
xx <- sort(table(below_avg_panc_in$Hugo_Symbol),decreasing=TRUE)[1:5]
xx
xx <- sort(table(below_avg_panc_in$Hugo_Symbol),decreasing=TRUE)[1:10]
xx
panc_top5_mut <- sort(table(below_avg_panc_in$Hugo_Symbol),decreasing=TRUE)[1:5]
panc_top5_mut
nrow(below_avg_panc_in[below_avg_panc_in$Hugo_Symbol == "TP53", ])
#common mutation with below average IC50
below_avg_panc_IC50 <- panc_in[panc_in$Abs.IC50 < mean(panc_in$Abs.IC50), ]
panc_top5_mut <- sort(table(below_avg_panc_IC50$Hugo_Symbol),decreasing=TRUE)[1:5]
panc_top5_mut
panc_top5_mut_IC50 <- sort(table(below_avg_panc_IC50$Hugo_Symbol),decreasing=TRUE)[1:5]
panc_top5_mut_IC50
#common mutation with below average AUC value
below_avg_panc_AUC <- panc_in[panc_in$AUC < mean(panc_in$AUC), ]
panc_top5_mut_AUC <- sort(table(below_avg_panc_AUC$Hugo_Symbol),decreasing=TRUE)[1:5]
panc_top5_mut_AUC
# statistical significance of difference in IC50 values between cells with that mutation and cells without the mutation
panc_top5_mut_IC50[0]
# statistical significance of difference in IC50 values between cells with that mutation and cells without the mutation
panc_top5_mut_IC50[1]
# statistical significance of difference in IC50 values between cells with that mutation and cells without the mutation
panc_top5_mut_IC50[1,1]
# statistical significance of difference in IC50 values between cells with that mutation and cells without the mutation
panc_top5_mut_IC50[1:1]
# statistical significance of difference in IC50 values between cells with that mutation and cells without the mutation
panc_top5_mut_IC50[1,1]
# statistical significance of difference in IC50 values between cells with that mutation and cells without the mutation
panc_top5_mut_IC50[(1,]
# statistical significance of difference in IC50 values between cells with that mutation and cells without the mutation
panc_top5_mut_IC50[1,]
# statistical significance of difference in IC50 values between cells with that mutation and cells without the mutation
panc_top5_mut_IC50[1, ]
# statistical significance of difference in IC50 values between cells with that mutation and cells without the mutation
panc_top5_mut_IC50[, 1]
dim(panc_top5_mut_IC50)
# statistical significance of difference in IC50 values between cells with that mutation and cells without the mutation
panc_top5_mut_IC50[1]
panc_top5_mut_IC50
View(below_avg_panc_IC50)
# statistical significance of difference in IC50 values between cells with that mutation and cells without the mutation
?t.test
TP53 <- below_avg_panc_IC50[below_avg_panc_IC50$Hugo_Symbol=="TP53"]
TP53 <- below_avg_panc_IC50[below_avg_panc_IC50$Hugo_Symbol=="TP53", ]
View(TP53)
View(TP53)
unique(final_df)
final_df <- unique(final_df)
getwd()
setwd(C:/Users/james/Desktop/Sumoylation_Analysis/project/inhibition_analysis)
setwd("C:/Users/james/Desktop/Sumoylation_Analysis/project/inhibition_analysis")
inhibition <- read.csv("inhibition_data.csv", fileEncoding="UTF-8-BOM") #inhibition data
inhibition <- read.csv("inhibition_data.csv", fileEncoding="UTF-8-BOM") #inhibition data
View(ccl_mut)
View(mut_df)
#eliminate silent mutation
mut_df <- mut_df[mut_df$Variant_Classification != "Silent", ]
nrow(distinct(mut_df, ccl, .keep_all = TRUE))
#extract colorectal and pancreatic cancer only
mut_df <- mut_df[which(mut_df$lineage == "colorectal" | mut_df$lineage == "pancreas"), ]
library(dplyr)
nrow(distinct(mut_df, ccl, .keep_all = TRUE))
#extract colorectal and pancreatic cancer only
mut_df <- mut_df[which(mut_df$lineage == "colorectal" | mut_df$lineage == "pancreas"), ]
#extract colorectal and pancreatic cancer only
mut_df <- mut_df[which(mut_df$lineage == "colorectal" | mut_df$lineage == "pancreas"), ]
nrow(distinct(mut_df, ccl, .keep_all = TRUE))
#import the auc data to manipulate
mut_df <- merge(x = ccl_df,
y = mut,
by = "ID")
#eliminate silent mutation
mut_df <- mut_df[mut_df$Variant_Classification != "Silent", ]
nrow(distinct(mut_df, ccl, .keep_all = TRUE))
#now process inhibition data by eliminating all spaces and special characters
inhibition$cell <- gsub(" ", "", inhibition$cell)
inhibition$cell <- gsub("-", "", inhibition$cell)
inhibition$cell <- gsub("\\.", "", inhibition$cell) #to remove dot, add 2 backslashes
inhibition$cell <- toupper(inhibition$cell)
View(inhibition)
class(mut_df$ccl)
final_df <- merge(x = mut_df,
y = inhibition,
by = "ccl")
final_df <- merge(x = mut_df,
y = inhibition,
by = "ccl")
View(inhibition)
colnames(inhibition)[which(names(inhibition) == "cell")] <- "ccl"
final_df <- merge(x = mut_df,
y = inhibition,
by = "ccl")
?unique
final_df <- unique(final_df)
nrow(distinct(final_df, ccl, .keep_all = TRUE))
View(final_df)
View(mut_df)
nrow(distinct(final_df, ccl, .keep_all = TRUE))
View(inhibition)
View(final_df)
colo_in <- final_df[final_df$lineage == "colorectal", ]
nrow(distinct(colo_in, ccl, .keep_all = TRUE))
panc_in <- final_df[final_df$lineage == "pancreas", ]
nrow(distinct(panc_in, ccl, .keep_all = TRUE))
View(final_df)
final_df$lineage
distinct(final_df$lineage)
distinct(final_df, lineage)
#extract colorectal and pancreatic cancer only
mut_df <- mut_df[which(mut_df$lineage == "colorectal" | mut_df$lineage == "pancreas"), ]
nrow(distinct(mut_df, ccl, .keep_all = TRUE))
distinct(mut_df, lineage)
final_df <- merge(x = mut_df,
y = inhibition,
by = "ccl")
final_df <- unique(final_df)
nrow(distinct(final_df, ccl, .keep_all = TRUE))
View(inhibition)
distinct(final_df, ccl, .keep_all = TRUE)
#import the auc data to manipulate
mut_df <- merge(x = ccl_df,
y = mut,
by = "ID")
#eliminate silent mutation
mut_df <- mut_df[mut_df$Variant_Classification != "Silent", ]
final_df <- merge(x = mut_df,
y = inhibition,
by = "ccl")
final_df <- unique(final_df)
distinct(final_df, ccl, .keep_all = TRUE)
nrow(distinct(final_df, ccl, .keep_all = TRUE))
#all the
distinct(final_df$ccl, lineage)
colo_in <- final_df[final_df$lineage == "colorectal", ]
nrow(distinct(colo_in, ccl, .keep_all = TRUE))
panc_in <- final_df[final_df$lineage == "pancreas" | final_df$lineage == "skin" |, ]
panc_in <- final_df[final_df$lineage == "pancreas" | final_df$lineage == "skin", ]
nrow(distinct(panc_in, ccl, .keep_all = TRUE))
View(panc_in)
nrow(distinct(panc_in, ccl))
nrow(distinct(colo_in, ccl))
#list top 5 common mutations
sort(table(final_df$Hugo_Symbol),decreasing=TRUE)[1:5]
#divide them into two groups: colorectal and pancreatic
sort(table(colo_in$Hugo_Symbol),decreasing=TRUE)[1:10]
sort(table(panc_in$Hugo_Symbol),decreasing=TRUE)[1:10]
#common mutation with below average AUC value
below_avg_panc_AUC <- panc_in[panc_in$AUC < 400, ]
panc_top5_mut_AUC <- sort(table(below_avg_panc_AUC$Hugo_Symbol),decreasing=TRUE)[1:10]
panc_top5_mut_AUC
nrow(distinct(below_avg_panc_AUC, ccl, .keep_all = TRUE))
nrow(distinct(above_avg_panc_AUC, ccl))
above_avg_panc_AUC <- panc_in[panc_in$AUC > 400, ]
above_avg <- sort(table(above_avg_panc_AUC$Hugo_Symbol),decreasing=TRUE)[1:10]
above_avg
nrow(distinct(above_avg_panc_AUC, ccl))
nrow(distinct(panc_in, ccl))
ttest_df <- below_avg_panc_IC50
ttest_df$Hugo_Symbol[ttest_df$Hugo_Symbol == "TP53"] <- "Has Mut"
ttest_df$Hugo_Symbol <- as.character(ttest_df$Hugo_Symbol)
ttest_df$Hugo_Symbol[ttest_df$Hugo_Symbol == "TP53"] <- "Has Mut"
ttest_df$Hugo_Symbol[ttest_df$Hugo_Symbol != "Has Mut"] <- "Lacks Mut"
stats <- t.test(Abs.IC50 ~ Hugo_Symbol, data = below_avg_panc_IC50)
stats$p.value
View(ttest_df)
ttest_df <- below_avg_panc_IC50
ttest_df$Hugo_Symbol <- as.character(ttest_df$Hugo_Symbol)
ttest_df$Hugo_Symbol[ttest_df$Hugo_Symbol == "TP53"] <- "Has Mut"
View(ttest_df)
ttest_df <- below_avg_panc_IC50
ttest_df$Hugo_Symbol <- as.character(ttest_df$Hugo_Symbol)
ttest_df$Hugo_Symbol[ttest_df$Hugo_Symbol != "TP53"] <- "Lacks Mut"
ttest_df$Hugo_Symbol[ttest_df$Hugo_Symbol == "TP53"] <- "Has Mut"
stats <- t.test(Abs.IC50 ~ Hugo_Symbol, data = below_avg_panc_IC50)
distinct(ttest_df, Hugo_Symbol)
stats <- t.test(Hugo_Symbol ~ Abs.IC50, data = below_avg_panc_IC50)
?levels
levels(ttest_df$Hugo_Symbol)
ttest_df <- below_avg_panc_AUC
ttest_df$Hugo_Symbol <- as.character(ttest_df$Hugo_Symbol)
ttest_df$Hugo_Symbol[ttest_df$Hugo_Symbol != "TP53"] <- "Lacks Mut"
ttest_df$Hugo_Symbol[ttest_df$Hugo_Symbol == "TP53"] <- "Has Mut"
stats <- t.test(Abs.IC50 ~ Hugo_Symbol, data = ttest_df)
stats$p.value
distinc(ttest_df, Hugo_Symbol)
distinct(ttest_df, Hugo_Symbol)
stats <- t.test(Abs.IC50 ~ Hugo_Symbol, data = ttest_df)
stats$p.value
stats$p.value
ttest <- function(G){
ttest_df <- below_avg_panc_AUC
ttest_df$Hugo_Symbol <- as.character(ttest_df$Hugo_Symbol)
ttest_df$Hugo_Symbol[ttest_df$Hugo_Symbol != G] <- "Lacks Mut"
ttest_df$Hugo_Symbol[ttest_df$Hugo_Symbol == G] <- "Has Mut"
stats <- t.test(Abs.IC50 ~ Hugo_Symbol, data = ttest_df)
stats$p.value
}
ttest("TP53")
nrow(distinct(below_avg_panc_AUC, ccl))
panc_top5_mut_AUC
above_avg
ttest("KRAS")
ttest("TTN")
stats <- t.test(AUC ~ Hugo_Symbol, data = ttest_df)
stats$p.value
ttest <- function(G){
ttest_df <- below_avg_panc_AUC
ttest_df$Hugo_Symbol <- as.character(ttest_df$Hugo_Symbol)
ttest_df$Hugo_Symbol[ttest_df$Hugo_Symbol != G] <- "Lacks Mut"
ttest_df$Hugo_Symbol[ttest_df$Hugo_Symbol == G] <- "Has Mut"
stats <- t.test(AUC ~ Hugo_Symbol, data = ttest_df)
stats$p.value
}
ttest("TTN")
ttest("TP53")
panc_top5_mut_AUC
#same as the IC50 result
nrow(distinct(below_avg_panc_AUC, ccl))
above_avg_panc_AUC <- panc_in[panc_in$AUC > 400, ]
above_avg <- sort(table(above_avg_panc_AUC$Hugo_Symbol),decreasing=TRUE)[1:10]
above_avg
ttest("EPPK1")
ttest("LRP1B")
ttest("BRCA2")
ttest("CHUK")
ttest("MUC16")
ttest("MUC5B")
ttest_df <- below_avg_panc_AUC
ttest_df$Hugo_Symbol <- as.character(ttest_df$Hugo_Symbol)
ttest_df$Hugo_Symbol[ttest_df$Hugo_Symbol != "TP53"] <- "Lacks Mut"
ttest_df$Hugo_Symbol[ttest_df$Hugo_Symbol == "TP53"] <- "Has Mut"
distinct(ttest_df, Hugo_Symbol)
stats <- t.test(AUC ~ Hugo_Symbol, data = ttest_df)
stats$p.value
stats$statistic
stats$estimate
summary(stats)
stats
ttest("TP53")
ttest("MUC16")
ttest <- function(G){
ttest_df <- below_avg_panc_AUC
ttest_df$Hugo_Symbol <- as.character(ttest_df$Hugo_Symbol)
ttest_df$Hugo_Symbol[ttest_df$Hugo_Symbol != G] <- "Lacks Mut"
ttest_df$Hugo_Symbol[ttest_df$Hugo_Symbol == G] <- "Has Mut"
t.test(AUC ~ Hugo_Symbol, data = ttest_df)
}
ttest("MUC16")
panc_top5_mut_AUC
above_avg
above_avg_panc_AUC <- panc_in[panc_in$AUC >= 400, ]
above_avg <- sort(table(above_avg_panc_AUC$Hugo_Symbol),decreasing=TRUE)[1:10]
above_avg
panc_top5_mut_AUC
#common mutation with below average AUC value
below_avg_panc_AUC <- panc_in[panc_in$AUC < 400, ]
panc_below_avg <- sort(table(below_avg_panc_AUC$Hugo_Symbol),decreasing=TRUE)[1:10]
panc_below_avg
nrow(distinct(below_avg_panc_AUC, ccl))
above_avg_panc_AUC <- panc_in[panc_in$AUC >= 400, ]
panc_above_avg <- sort(table(above_avg_panc_AUC$Hugo_Symbol),decreasing=TRUE)[1:10]
panc_below_avg
nrow(distinct(panc_below_avg, ccl))
#common mutation with below average AUC value
below_avg_panc_AUC <- panc_in[panc_in$AUC < 400, ]
panc_below_avg <- sort(table(below_avg_panc_AUC$Hugo_Symbol),decreasing=TRUE)[1:10]
panc_below_avg
nrow(distinct(panc_below_avg, ccl))
ttest_df <- panc_in
ttest_df$Hugo_Symbol <- as.character(ttest_df$Hugo_Symbol)
ttest_df$Hugo_Symbol[ttest_df$Hugo_Symbol != "TP53"] <- "Lacks Mut"
ttest_df$Hugo_Symbol[ttest_df$Hugo_Symbol == "TP53"] <- "Has Mut"
distinct(ttest_df, Hugo_Symbol)
t.test(AUC ~ Hugo_Symbol, data = ttest_df)
ttest <- function(G){
ttest_df <- panc_in
ttest_df$Hugo_Symbol <- as.character(ttest_df$Hugo_Symbol)
ttest_df$Hugo_Symbol[ttest_df$Hugo_Symbol != G] <- "Lacks Mut"
ttest_df$Hugo_Symbol[ttest_df$Hugo_Symbol == G] <- "Has Mut"
t.test(AUC ~ Hugo_Symbol, data = ttest_df)
}
ttest("MUC16")
panc_below_avg
panc_above_avg
ttest("EPPK1")
ttest("LRP1B")
ttest("TP53")
ttest("KRAS")
#create dataframe with top 10 mutations (with below 400 AUC)
panc_below_avg_df <- as.data.frame(panc_below_avg)
View(panc_below_avg_df)
?as.data.frame
#create dataframe with top 10 mutations (with below 400 AUC)
panc_below_avg_df <- as.data.frame(panc_below_avg, stringsAsFactors=FALSE)
#create dataframe with top 10 mutations (with below 400 AUC)
panc_below_avg_df <- as.data.frame(panc_below_avg, row.names=c("gene", "freq"), stringsAsFactors=FALSE)
#create dataframe with top 10 mutations (with below 400 AUC)
panc_below_avg_df <- as.data.frame(panc_below_avg, col.names=c("gene", "freq"), stringsAsFactors=FALSE)
#create dataframe with top 10 mutations (with below 400 AUC)
panc_below_avg_df <- as.data.frame(panc_below_avg, col.names=c("gene", "freq"), stringsAsFactors=FALSE)
View(panc_below_avg_df)
#create dataframe with top 10 mutations (with below 400 AUC)
panc_below_avg_df <- as.data.frame(panc_below_avg, col.names(panc_below_avg_df)<-c("gene", "freq"), stringsAsFactors=FALSE)
#create dataframe with top 10 mutations (with below 400 AUC)
panc_below_avg_df <- as.data.frame(panc_below_avg, colnames(panc_below_avg_df)<-c("gene", "freq"), stringsAsFactors=FALSE)
#create dataframe with top 10 mutations (with below 400 AUC)
panc_below_avg_df <- data.frame(setNames(panc_below_avg, c("gene", "freq"))
#create dataframe with top 10 mutations (with below 400 AUC)
panc_below_avg_df <- data.frame(setNames(panc_below_avg, c("gene", "freq")))
#create dataframe with top 10 mutations (with below 400 AUC)
panc_below_avg_df <- data.frame(setNames(panc_below_avg, c("gene", "freq")))
#create dataframe with top 10 mutations (with below 400 AUC)
panc_below_avg_df <- as.data.frame(panc_below_avg, stringsAsFactors=FALSE)
?colnames
colnames(panc_below_avg_df) <- c('mutation', 'freq')
panc_below_avg_df$mutated_mean
panc_below_avg_df$mutated_mean <- NA
panc_below_avg_df$unchanged_mean <- NA
panc_below_avg_df$others_mean <- NA
#create dataframe with top 10 mutations (with below 400 AUC)
panc_below_avg_df <- as.data.frame(panc_below_avg, stringsAsFactors=FALSE)
colnames(panc_below_avg_df) <- c('mutation', 'freq')
panc_below_avg_df$mutated_mean <- NA
panc_below_avg_df$others_mean <- NA
panc_below_avg_df$p.value <- NA
ttest(panc_below_avg_df$mutation[i])
for (i in nrow(panc_below_avg_df)) {
ttest(panc_below_avg_df$mutation[i])
}
panc_below_avg_df$mutation[1]
for (i in nrow(panc_below_avg_df)) {
ttest(panc_below_avg_df$mutation[i])
}
t <- t.test(AUC ~ Hugo_Symbol, data = ttest_df)
t$parameter
t$estimate
t$estimate[1]
t$estimate[1,1]
t$estimate[1]
t <- list()
t[[1]] <- t.test(AUC ~ Hugo_Symbol, data = ttest_df)
t
sapply(t, function(x) {
c(x$estimate[1],
x$estimate[2],
ci.lower = x$conf.int[1],
ci.upper = x$conf.int[2],
p.value = x$p.value)
})
t
tt <- sapply(t, function(x) {
c(x$estimate[1],
x$estimate[2],
ci.lower = x$conf.int[1],
ci.upper = x$conf.int[2],
p.value = x$p.value)
})
tt
tt[1]
tt[2]
